1)Consider the following sequence:

1st term: 1

2nd term: 1 2 1

3rd term: 1 2 1 3 1 2 1

4th term: 1 2 1 3 1 2 1 4 1 2 1 3 1 2 1

And so on. Write a program that takes as parameter an integer n and prints the nth terms of this sequence.

Example Input:

1

Output:

1

Example Input:

4

Output:

1 2 1 3 1 2 1 4 1 2 1 3 1 2 1

ANSWER:
import java.util.*;
public class seq{
    public static String seq(int n){
        if(n==1){
            return "1";
        }
        String prev=seq(n-1);
        return prev+" "+n+" "+prev;
    }
    public static void main(String args[]){
        Scanner sc=new Scanner(System.in);
        int n=sc.nextInt();
        String result=seq(n);
        System.out.println(result);
        sc.close();
    }
    
        
        
    
    
}

Input	Expected	                     Got	
1     1                              1
2      1 2 1                         1 2 1
3     1 2 1 3 1 2 1                  1 2 1 3 1 2 1
4     1 2 1 3 1 2 1 4 1 2 1 3 1 2 1  1 2 1 3 1 2 1 4 1 2 1 3 1 2 1

2)Consider a sequence of the form 0, 1, 1, 2, 4, 7, 13, 24, 44, 81, 149â€¦

Write a method program which takes as parameter an integer n and prints the nth term of the above sequence. The nth term will fit in an integer value.

Example Input:

5

Output:

4

Example Input:

8

Output:

24

Example Input:

11

Output:

149

ANSWER:
import java.util.*;

public class seq{
    public static int seq(int n){
        
        if(n==0){
            return 0;
        }
        else if (n==1){
            return 1;
        }
        else if(n==2){
            return 1;
        }
        else{
            int[] arr=new int[n+1];
            arr[0]=0;
            arr[1]=1;
            arr[2]=1;
            for(int i=3;i<=n;i++){
                arr[i]=arr[i-1]+arr[i-2]+arr[i-3];
            }
            return arr[n-1];
            }
            
            
        
    }
    public static void main(String args[]){
        int n;
        Scanner sc=new Scanner(System.in);
        n=sc.nextInt();
        seq abc=new seq();
        int result=abc.seq( n);
        System.out.println(result);
    }
    
}

3)Write a program that takes as parameter an integer n.

You have to print the number of zeros at the end of the factorial of n.

For example, 3! = 6. The number of zeros are 0. 5! = 120. The number of zeros at the end are 1.

Note: n! < 10^5

Example Input:

3

Output:

0

Example Input:

60

Output:

14

Example Input:

100

Output:

24

Example Input:

1024

Output:

253

ANSWER:
// Java program to count trailing 0s in n!
import java.io.*;
import java.util.Scanner;
class prog {
    // Function to return trailing
    // 0s in factorial of n
    static int findTrailingZeros(int n)
    {
        int count=0;
        if (n < 0) // Negative Number Edge Case
            return -1;

        // Initialize result
        

        // Keep dividing n by powers
        // of 5 and update count
        for (int i = 5; n / i >= 1; i*=5)
            count += n / i;

        return count;
        
    }

    // Driver Code
    public static void main(String[] args)
    {
        int n ;
        Scanner sc= new Scanner(System.in);
        n=sc.nextInt();
        prog m=new prog();
        int zeroes=  m.findTrailingZeros(n);
        System.out.println(zeroes);
        
        
    }
}
